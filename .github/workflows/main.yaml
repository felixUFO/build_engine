name: Build & Upload Engine

on:
  workflow_dispatch:
    inputs:
      engine_revision:
        description: "The Engine revision to build and upload"
        required: true
      operating_system:
        description: "The operating system used to build the engine"
        required: true
        default: "Linux"
        options:
          - "Linux"
          - "MacOS"
          - "Windows"

jobs:
  build_and_upload:
    permissions:
      contents: "read"
      id-token: "write"

    runs-on: [self-hosted, "${{ github.event.inputs.operating_system }}"]

    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@v3

      # Runner doesn't have permissions to sudo.
      # - name: Install packages
      #   run: ./build_engine/linux_setup.sh
      #   shell: bash

      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA }}

      # Install gcloud, `setup-gcloud` automatically picks up authentication from `auth`.
      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v1"

      - name: Checkout Engine
        run: ./build_engine/checkout.sh ~/.engine_checkout
        shell: bash

      - name: 🏗️ Build & Upload Engine (${{ github.event.inputs.operating_system }})
        if: ${{ github.event.inputs.operating_system == 'linux' }}
        run: ./build_engine/linux_build_and_upload.sh ~/.engine_checkout/engine ${{ inputs.engine_revision }}
        shell: bash

      - name: 🏗️ Build & Upload Engine (${{ github.event.inputs.operating_system }})
        if: ${{ github.event.inputs.operating_system == 'macos' }}
        run: ./build_engine/mac_build_and_upload.sh ~/.engine_checkout/engine ${{ inputs.engine_revision }}
        shell: bash

      - name: 🏗️ Build & Upload Engine (${{ github.event.inputs.operating_system }})
        if: ${{ github.event.inputs.operating_system == 'windows' }}
        run: ./build_engine/win_build_and_upload.sh ~/.engine_checkout/engine ${{ inputs.engine_revision }}
        shell: powershell
